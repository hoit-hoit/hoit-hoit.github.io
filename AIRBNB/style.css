@charset "utf-8";

/**reset**/
*{ margin: 0; padding: 0;}
ul > li{ list-style: none;}


/** header **/
header{
  display: flex;
  justify-content: space-between;
  /* 양쪽끝에 두 개가 딱 달라붙도록 함 */
  align-items: flex-start;
  /* padding: 20px 10px; */
  width: 90%;
  height: 160px;
  /* 전체 레이아웃을 픽셀로 고정시키는 것은 좋은 방법이 아니다. 이번에는 어쩔 수 없다. */
  margin: 20px auto;
  position: relative;
}
header > h1:hover{
  color: rgb(246, 10, 57);
  cursor: pointer;
}
header > .center{
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  /* 중앙에 맞추기 외우기 */
}


header >  .center > ul{
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px 0;
}

header > .center > div{
  border: 1px solid #888;
  border-radius: 50px;  
  padding: 10px 30px;
  display: flex;
  align-items: center;
  /* 패딩 값 앞은 위,아래/ 뒷쪽은 좌우이다. */
}
header > .center > div > i{
  /* 아이템 한 개 일 때  */
  background-color: crimson;
  width: 30px;
  height: 30px;
  text-align: center;
  line-height: 30px;
  border-radius: 50%;
  cursor: pointer;
  color: #fff; 
  
}
header >  .center > div > ul{
  width: 600px;
  display: flex;
  justify-content: space-between;  
}
header >  .center > div > ul > li:nth-child(1){
  flex: 2;
  border-radius: 50px 0 0 50px;
}
header >  .center > div > ul > li:nth-child(4){
  /* width:  30%; */
  /* width height로 안주고 아래처럼 flex로 줄 수 있다. 2.2.1.1.로 나누는 것이기 때문에 6조각으로 균일하게 나눠서 2만큼이 1,4에 배분되는 것*/
  /* display flex는 부모한테 주면 된다. */
  flex: 2;
  border-radius: 0 50px 50px 0;
  border: none;
}
header >  .center > div > ul > li:nth-child(2),
header >  .center > div > ul > li:nth-child(3){
  /* width:  20%; */
  flex: 1;
  /* flex에서 order 기억! z-index 대신에 쓰는 것 */
}
header > .center > div > ul > li{
  border-right: 1px solid #999;
  padding: 3px 10px;
}
header> .center > div > ul > li:hover{
  background-color: #dfd9d9;
  cursor: pointer;
}
/* right 가로로 처리 display flex */
header > .right{
  display: flex;
  align-items: center;
  gap: 20px;
  
}
header > .right > ul{
  border: 1px solid #bdb7b7;
  border-radius: 30px;
  padding: 10px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
}

header > .right > ul > li:nth-of-type(2){
  font-size: 24px;
}

/*** mobile menu ***/
div.mobile-menu{
  width: 90%;
  margin: 20px auto;
  display: none;
  /* display: flex;설정되어 있는 것을 none으로 바꿔서 안보이게 한 후에 아래에서 display flex를 세팅해서 보여지게 한다. */
  /* 디스플레이 플렉스 가로로 표시 */
  justify-content: space-between;
  align-items: center;
  gap: 20px;
}
div.mobile-menu > .left{
  border: 1px solid #555;
  box-shadow: 0 0 10px rgba(0,0,0,0.3);
  border-radius: 50px;
  padding: 7px;
  display: flex;
  align-items: center;
  /* 남아있는 컨텐츠를 몇등분으로 가져갈거냐? right에는 위드값을 줬으니까 남아있는 부분에서 flex 1하면 나머지 부분에서 left가 유연하게 변하면서, 나머지 부분을 전체 차지한다. */
  flex:1;  
  }
  div.mobile-menu > .left > i{
    width: 40px;
    text-align: center;
  }

  div.mobile-menu > .right{
    width: 40px;
    height: 40px;
    text-align: center;
    line-height: 40px;
    /* height값 설정 되어있을 때 , 텍스트 align center로하고, line height값 height와 같게 주면 가운데 정렬 된다. */
    border: 1px solid #222;
    border-radius: 50%;
  }

  main > nav > .item{
    width: 40px;
    height: 40px;
    background-color: #555;
    border-radius: 50%;
  }

/*** main ***/
main{
  width: 90%;
  margin: 0 auto;
}

/*** nav ***/
nav{
  display: flex;  
  align-items: center;
  position: relative;  
}

nav > .btn > div{
  width: 20px;
  height: 20px;
  border: 1px solid #222;
  border-radius: 50%;
  /**중앙정렬**/
  text-align: center;
  line-height: 20px;
  padding: 10px;
  font-weight: bolder;
  background-color: #fff;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  opacity: 0.8; 
  
}
nav > .btn > div:nth-child(1){
  /* 왼쪽 버튼 */
  left: -20px;
  cursor: pointer;
}

nav > .btn > div:nth-child(2){
  /* 오른쪽 버튼 */
  left: 80%;
  cursor: pointer;
}
nav > .icon{
  /* flex: 1; */
  width: 80%;
  color: #222;
  display: flex;  
  justify-content: space-around;
  gap: 20px;
  overflow: hidden;  
}
nav > .icon > .item{
  padding-bottom: 5px;
  opacity: 0.5;
  text-align: center;
  font-weight: bolder;
  
}
nav > .icon > .item:hover{
  cursor: pointer;
  border-bottom: 1px solid #222;
  opacity: 1;
}
nav > .icon > .item>img{  
  width: 80px;
}
nav > .filter{
  margin-left: auto;
  /* 오토는 자동으로 맞춰줘라는 뜻, 마진 레프트 오토는 왼쪽에 마진값을 주기 위한 것이다. */
  text-align: center;
  width: 80px;  
  padding: 7px;
  border: 1px solid #222;
  border-radius: 10px;   
}

/***card 형태***/
/* 여러 줄 설정 card-list에서 wrap */
main > .card-list{
  display: flex;
  margin-top: 30px;
  flex-wrap: wrap;
}
main .card{
  margin: 10px;
  width: 15%; 
  font-size: 12px;   
  /* 상속이 되어 아래있는 부분의 폰트 사이즈가 12px이 된다. */
}
main .card >.card-img{
  /* width: 100%; */
  border-radius: 7px;
  box-sizing: border-box;
  padding: 10px;
  aspect-ratio: 1;
  /* 1/3으로 하면 width값이 1, height 값이 3이라는 뜻이다.1은 1:1로 세팅한다는 뜻이다. */
  background-color: #555;
  /* 위의 선택자(aspect-ratio)는 표준으로 지정된 것은 아니다 *-width값에 의해서 height값을 세팅하는 경우**/
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-image: url(./images/img1.webp);
  background-size: cover;
  background-repeat: no-repeat;
}

/** 메인 안에 카드 중에 몇 번째 카드의 백그라운드 이미지 바꿀 것인가 엄청 중요! **/
main .card:nth-of-type(2) > .card-img{
  background-image: url(./images/img2.webp);
}
main .card:nth-of-type(3) > .card-img{
  background-image: url(./images/img3.webp);
}
main .card:nth-of-type(4) > .card-img{
  background-image: url(./images/img4.webp);
}
main .card:nth-of-type(5) > .card-img{
  background-image: url(./images/img5.webp);
}
main .card:nth-of-type(6) > .card-img{
  background-image: url(./images/img6.webp);
}
main .card:nth-of-type(7) > .card-img{
  background-image: url(./images/img7.webp);
}
main .card:nth-of-type(8) > .card-img{
  background-image: url(./images/img8.webp);
}
main .card:nth-of-type(9) > .card-img{
  background-image: url(./images/img9.webp);
}
main .card:nth-of-type(10) > .card-img{
  background-image: url(./images/img10.webp);
}
main .card:nth-of-type(11) > .card-img{
  background-image: url(./images/img11.webp);
}
main .card:nth-of-type(12) > .card-img{
  background-image: url(./images/img12.webp);
}
.view-btn{
  opacity: 100;
}
main  .card > .card-img > .card-title >p{
  background-color: #fff;
  border-radius: 10px;  
  padding: 3px 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
main  .card > .card-img > .card-title > i{
  color: #fff;
}

main  .card > .card-img > .card-btn > p{
  width: 15px;
  height: 15px;
  background-color: #fff;
  border-radius: 50%;
  text-align: center;
  line-height: 15px;
  padding: 5px;
  display: none;
}
main .card > .card-img:hover > .card-btn > p{
  cursor: pointer;
  display: block;
}
main  .card > .card-img > .card-title,
main  .card > .card-img > .card-btn
{
  display: flex;
  justify-content: space-between;
  align-items: center;
}
main  .card > .card-img > .circle{
  text-align: center;
  /* inline-block은 text-align을 center로 주면 중앙에 맞출 수 있다. */
}
main .card > .card-img > .circle > span{
  display: inline-block;
  width: 10px;
  height: 10px;
  background-color: #aaa;
  border-radius: 50%;  
}
main .card >.card-txt > .card-txt1{
  margin-top: 10px;  
  display: flex;
  justify-content: space-between;  
}



/** footer **/
  footer{
    text-align: center;
  }
  footer > p{
    margin: 20px auto;  
  }
  /* p 태그 중앙 정렬 하는 법  margin에 auto*/

  footer > p:nth-child(2){
    background-color: #222;
    color: #fff;
    width: 100px;
    padding: 10px 20px;
    border-radius: 10px;
    
  }
  footer > p:nth-child(2):hover{
    cursor: pointer;
  }

/*** 미디어쿼리 ***/
@media screen and (max-width:1100px) {
  main .card{
    width: 23%;     
  }
}
@media screen and (max-width:950px) {
  header{
    height: 200px
  }
  header > .center{
    top: 50px
  }
  main .card{
    width: 45%;     
  }
}
@media screen and (max-width:740px) {
  header{
    display: none;
  } 
  div.mobile-menu{
    display: flex;
  }
  main .card{
    width: 100%;
  }
}